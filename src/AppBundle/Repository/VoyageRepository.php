<?php

namespace AppBundle\Repository;



/**
 * VoyageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VoyageRepository extends \Doctrine\ORM\EntityRepository
{

    public function findVoyageByUser($id){
        $rows = $this->getEntityManager()
            ->createQuery(
                'SELECT v.nom, l.nom as locationName, a.dateDebut, a.dateFin, mp.value, v.description, v.id, mp.value
                FROM AppBundle:Voyage v 
                LEFT JOIN AppBundle:Location l
                    WITH l.id=v.idLocation 
                INNER JOIN AppBundle:Utilisateur_Voyage uv 
                    WITH uv.idVoyage=v.id 
                INNER JOIN AppBundle:Agenda a
                    WITH a.id=v.idAgenda
                INNER JOIN AppBundle:MoneyPot mp
                    WITH mp.id=v.idMoneyPot
                WHERE v.isActif =1 
                    AND uv.idUtilisateur = :id
                    
                '
            )->setParameter('id', $id)
            ->getResult();
        return $rows;

    }

    public function findUserByVoyage($id){
        $rows = $this->getEntityManager()
            ->createQuery(
                'SELECT u.username, u.id
                FROM AppBundle:Utilisateur u
                INNER JOIN AppBundle:Utilisateur_Voyage uv
                    WITH uv.idUtilisateur = u.id
                INNER JOIN AppBundle:Voyage v
                    WITH uv.idVoyage=v.id  
                WHERE v.id = :id
                '
            )->setParameter('id', $id)
            ->getResult();
        return $rows;

    }


    public function findInfoFromVoyage($id){
        $rows = $this->getEntityManager()
            ->createQuery(
                'SELECT u.username, u.id
                FROM AppBundle:Utilisateur u
                INNER JOIN AppBundle:Utilisateur_Voyage uv
                    WITH uv.idUtilisateur = u.id
                INNER JOIN AppBundle:Voyage v
                    WITH uv.idVoyage=v.id 
                WHERE v.isActif =1 
                    AND v.id = :id
                    
                '
            )->setParameter('id', $id)
            ->getResult();
        return $rows;
    }

    public function findCommentsByVoyageId($id){
        $rows = $this->getEntityManager()
            ->createQuery(
                'SELECT u.username, u.id as utilisateur_id, c.message as message, c.dateCommentaire as commentaire_date
                FROM AppBundle:Utilisateur u
                INNER JOIN AppBundle:Commentaire c
                    WITH c.idUtilisateur = u.id
                INNER JOIN AppBundle:Voyage v
                    WITH v.id = c.idVoyage
                WHERE v.id = :id
                ORDER BY commentaire_date ASC
                    
                '
            )->setParameter('id', $id)
            ->getResult();
        return $rows;

    }

}
