<?php

namespace AppBundle\Repository;

/**
 * PackRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PackRepository extends \Doctrine\ORM\EntityRepository
{

    public function findFavoritePacks(){
        $rows = $this->getEntityManager()
            ->createQuery(
                'SELECT p.id, p.nom, p.description, p.lien ,l.nom, p.nbPersonne, p.prix, p.dateDebut, p.dateFin, SUM(n.note) as somme, COUNT(n.id) as nb,SUM(n.note)/COUNT(n.id) as moyenne FROM AppBundle:Pack p INNER JOIN AppBundle:Notation n WITH p.id=n.idPack  INNER JOIN AppBundle:Location l WITH p.idLoc=l.id GROUP BY p.id ORDER BY moyenne DESC'
            )
            ->setMaxResults(4)
            ->getResult();
        
        

        return $rows;
    }

    public function findAllWithNotation(){
        $rows = $this->getEntityManager()
            ->createQuery(
                'SELECT p.id, p.nom, p.description, p.lien ,l.nom, p.nbPersonne, p.prix, p.dateDebut, p.dateFin, SUM(n.note) as somme, COUNT(n.id) as nb,SUM(n.note)/COUNT(n.id) as moyenne FROM AppBundle:Pack p INNER JOIN AppBundle:Notation n WITH p.id=n.idPack  INNER JOIN AppBundle:Location l WITH p.idLoc=l.id GROUP BY p.id ORDER BY moyenne DESC'
            )
            ->getResult();
        return $rows;
    }

    public function findByLoc($loc){
        $rows = $this->getEntityManager()
            ->createQuery(
                'SELECT p.id, p.nom, p.description, p.lien ,l.nom, p.nbPersonne, p.prix, p.dateDebut, p.dateFin, SUM(n.note) as somme, COUNT(n.id) as nb,SUM(n.note)/COUNT(n.id) as moyenne FROM AppBundle:Pack p INNER JOIN AppBundle:Notation n WITH p.id=n.idPack  INNER JOIN AppBundle:Location l WITH p.idLoc=l.id WHERE l.nom LIKE :loc GROUP BY p.id ORDER BY moyenne DESC'
            )->setParameter('loc', $loc)
            ->getResult();
        return $rows;
    }
}
